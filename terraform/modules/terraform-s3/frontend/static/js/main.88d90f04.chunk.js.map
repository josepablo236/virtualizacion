{"version":3,"sources":["context/ImagenContext.js","components/principal/NoSesion.js","img/escucha.svg","components/principal/NavBarP.js","components/principal/Header.js","img/camara.svg","img/analisis.svg","img/escucha2.svg","img/escucha3.svg","components/principal/Pasos.js","img/emosion.jpg","img/musica.jpg","img/guitarra.jpeg","components/principal/Informacion.js","components/principal/Footer.js","components/principal/Principal.js","components/principal/Foto.js","components/principal/SubirDescarga.js","components/resultado/Retro.js","components/resultado/NavBar.js","components/resultado/ErrorResult.js","components/ListItems/ListItem.js","components/ListItems/Track.js","components/principal/Canciones.js","components/resultado/Resultado.js","components/Error.js","components/auth/Login.js","components/auth/NuevaCuenta.js","components/rutas/RutaPrivada.js","components/principal/Subir.js","components/principal/Sesion.js","components/principal/HeaderLogueado.js","components/principal/Historial.js","components/principal/Logueado.js","components/principal/Dashboard.js","App.js","reportWebVitals.js","index.js","utils/index.js","api/index.js"],"names":["ImagenContext","createContext","ImagenProvider","props","useState","isAuthenticated","setIsAuthenticated","spotifyTokenResponse","setSpotifyTokenResponse","spotifyRefreshToken","setSpotifyRefreshToken","cargar","guardarCargar","isAdmin","guardarIsAdmin","user","guardarUser","foto","guardarFoto","nombre","guardarNombre","consultarSpotify","guardarConsultarSpotify","base","guardarBase","historial","guardarHistorial","regresar","guardarRegresar","emocion","guardarEmocion","reco","guardarReco","errorfoto","guardarErrorfoto","useEffect","obtenerInfo","a","recognitionCall","then","data","statusCode","body","file_path","array","getQuerySpotify","split","Provider","value","children","NoSesion","process","REACT_APP_SPOTIFY_CALLBACK_HOST","useContext","cargando","handleLogin","useLocation","useHistory","useCallback","code","spotifyAuthCall","grant_type","response","access_token","refresh_token","Error","alert","className","style","width","height","role","to","Button","onClick","variant","size","startIcon","NavBarP","cerrarSesion","src","logo","alt","onSubmit","type","Header","Pasos","Camara","Analisis","Escucha","Historial","Informacion","playa","avion","lago","Footer","id","Principal","Foto","encendida","guardarEncendida","autoPlay","document","getElementById","setAttribute","createElement","appendChild","video","imgData","toDataURL","href","download","click","removeChild","pause","srcObject","getTracks","stop","img","canvas","getContext","drawImage","querySelector","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","stream","play","e","console","log","addEventListener","videoWidth","videoHeight","SubirDescarga","imagen","guardarImagen","subida","guardarSubida","ImageSelectedPrevious","setImageSelectedPrevious","component","endIcon","accept","multiple","onChange","target","files","name","undefined","reader","FileReader","readAsDataURL","onload","preventDefault","result","changeImage","Retro","errorFoto","mensaje","guardarMensaje","enviarDatos","axios","post","headers","Stack","direction","spacing","uuidv4","email","correo","retro","NavBar","ErrorResult","React","memo","imageUrl","externalUrl","releaseDate","artist","window","open","Canciones","resultado","guardarResultado","consultaApi","guardarConsultaApi","error","guardarError","errorCargar","guardarErrorCargar","handleSearch","itemEmotion","paramsArray","q","limit","offset","spotifySearchCall","canciones","tracks","items","map","item","index","song","artists","album","release_date","images","url","external_urls","spotify","push","nuevo","find","x","nuevoHistorial","concat","Resultado","loading","guardarLoading","setTimeout","Login","password","usuario","guardarUsuario","consultar","guardarConsulta","exito","guardarExito","llenarObjeto","datos","consultarAPI","get","res","pass","String","CryptoJS","require","bytes","AES","decrypt","originalText","toString","enc","Utf8","trim","htmlFor","placeholder","NuevaCuenta","confirmar","creado","guardarCreado","status","length","ciphertext","encrypt","RutaPrivada","Component","render","Input","styled","display","Subir","archivo","guardarArchivo","mostrarboton","guardarMostrarBoton","alignItems","position","top","left","transform","bgcolor","border","boxShadow","p","Sesion","setOpen","Modal","onClose","Box","sx","HeaderLogueado","consultarDatos","Logueado","Chart","register","registerables","Dashboard","usuarios","guardarUsuarios","maxUser","guardarMaxUser","maxReco","guardarMaxReco","totalReco","guardarTotalReco","mostrar","guardarMostrar","dataRetro","guardarDataRetro","dataEmo","guardarDataEmo","optionsRetro","guardarOptionsRetro","optionsEmo","guardarOptionsEmo","mostrarRetro","retros","mostrarEmociones","emotions","getTotalReco","recomendations","getMaxReco","users","recoArray","recomendaciones","filter","maxValue","Math","max","emocionesArray","labelsEmo","valoresEmo","total","valor","forEach","element","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","responsive","retroArray","labelsRetro","valoresRetro","maintainAspectRatio","options","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","commonParams","client_id","client_secret","requiredParams","params","searchParams","Object","keys","key","encodeURIComponent","join","apiCall","method","Buffer","spotifyCall","json","token","URL","append","Authorization","blobtobase64","myB64","bodyjson","JSON","stringify","content","fetch","blob","Promise","resolve","reject","onloadend","emotionsArray","Confidence","emotion","Type"],"mappings":"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","file":"static/js/main.88d90f04.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\nimport { recognitionCall, getQuerySpotify } from '../utils';\r\n\r\n//Crear context\r\nexport const ImagenContext = createContext();\r\n\r\n//Provider para funciones y state\r\nconst ImagenProvider = (props) =>{\r\n    //State autenticacion\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    //State Token\r\n    const [spotifyTokenResponse, setSpotifyTokenResponse] = useState();\r\n    //State Refresh Token\r\n    const [spotifyRefreshToken, setSpotifyRefreshToken] = useState();\r\n    //State cargar API\r\n    const [cargar, guardarCargar] = useState(false);\r\n    //State del usuario admin\r\n    const [isAdmin, guardarIsAdmin] = useState(false);\r\n    //State usuario\r\n    const [user, guardarUser] = useState({});\r\n    //State de la imagen\r\n    const [foto, guardarFoto] = useState({});\r\n    //State nombre de la imagen\r\n    const [nombre, guardarNombre] = useState('');\r\n    //State de consulta resultado\r\n    const [consultarSpotify, guardarConsultarSpotify] = useState(false);\r\n    //Necesito: login, retro, resultado\r\n    const [base, guardarBase] = useState({});\r\n    //State para historial\r\n    const [historial, guardarHistorial] = useState([]);\r\n    //Para volver a pagina principal\r\n    const [regresar, guardarRegresar] = useState(false);\r\n    //State de la emocion\r\n    const [emocion, guardarEmocion] = useState('');\r\n    //State de la recomendacion\r\n    const [reco, guardarReco] = useState('');\r\n    //States de errores\r\n    //State error imagen\r\n    const [errorfoto, guardarErrorfoto] = useState(false);\r\n\r\n    //Para regresar\r\n    useEffect(()=>{\r\n        if(regresar){\r\n            setIsAuthenticated(true);\r\n        }\r\n    },[regresar]);\r\n\r\n    //Consulta a lambda\r\n    useEffect(() => {\r\n        if(cargar){\r\n            const obtenerInfo = async() =>{\r\n                var data = await recognitionCall(foto)\r\n                .then(data => {\r\n                    if(data.statusCode === 200){\r\n                        var body = data.file_path;\r\n                        var respuesta = getQuerySpotify(body);\r\n                        var array = respuesta.split('|');\r\n                        guardarEmocion(array[0]);\r\n                        guardarReco(array[1]);\r\n                        guardarConsultarSpotify(true);\r\n                        guardarErrorfoto(false);\r\n                    }\r\n                    else{\r\n                        guardarErrorfoto(true);\r\n                    }\r\n                });\r\n            }\r\n            obtenerInfo();\r\n        }\r\n    }, [foto]);\r\n\r\n    return(\r\n        <ImagenContext.Provider\r\n            value={{\r\n                isAuthenticated,\r\n                spotifyTokenResponse,\r\n                spotifyRefreshToken,\r\n                user,\r\n                foto,\r\n                cargar,\r\n                nombre,\r\n                errorfoto,\r\n                consultarSpotify,\r\n                base,\r\n                historial,\r\n                emocion,\r\n                reco,\r\n                isAdmin,\r\n                guardarIsAdmin,\r\n                setIsAuthenticated,\r\n                setSpotifyTokenResponse,\r\n                setSpotifyRefreshToken,\r\n                guardarUser,\r\n                guardarFoto,\r\n                guardarCargar,\r\n                guardarNombre,\r\n                guardarErrorfoto,\r\n                guardarRegresar,\r\n                guardarConsultarSpotify,\r\n                guardarHistorial,\r\n                guardarBase,\r\n                guardarReco,\r\n                guardarEmocion\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ImagenContext.Provider>\r\n    )\r\n}\r\nexport default ImagenProvider;","import React, {Fragment, useEffect, useContext, useCallback, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Lock from '@material-ui/icons/LockOpen';\r\nimport { useHistory, useLocation, Link } from 'react-router-dom';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\nimport { spotifyAuthCall } from '../../utils';\r\n\r\nconst spotifyUrl = `https://accounts.spotify.com/authorize?client_id=${process.env.REACT_APP_SPOTIFY_CLIENT_ID}&response_type=code&redirect_uri=${process.env.REACT_APP_SPOTIFY_CALLBACK_HOST}&scope=user-read-private`;\r\n\r\nconst NoSesion = () => {\r\n\r\n    //State de la auth que viene desde el context\r\n    const { spotifyRefreshToken, setSpotifyRefreshToken, setSpotifyTokenResponse, setIsAuthenticated } = useContext(ImagenContext);\r\n\r\n    //State para spinner\r\n    const [cargando, guardarCargando] = useState(false);\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    //Login Spotify\r\n    const authenticateUser = useCallback(async(code)=> {\r\n        try {\r\n            let response; \r\n\r\n            //Si el refresh token no existe, solicita un token\r\n            response = await spotifyAuthCall({ grant_type: 'client_credentials' });\r\n\r\n            if(response.access_token){\r\n                setSpotifyRefreshToken(response?.refresh_token);\r\n                setSpotifyTokenResponse(response);\r\n                setIsAuthenticated(true);\r\n            }\r\n            else{\r\n                throw new Error(\"Usuario no fue logueado\");\r\n            }\r\n        } catch (error) {\r\n            alert(\"Usuario no fue logueado en spotify\");\r\n            setSpotifyTokenResponse(null);\r\n            setSpotifyRefreshToken(null);\r\n            setIsAuthenticated(false);\r\n        }\r\n    },[setSpotifyRefreshToken, setSpotifyTokenResponse, setIsAuthenticated, spotifyRefreshToken]);\r\n\r\n\r\n    //Al hacer click en iniciar sesion\r\n    const handleLogin = async()=>{\r\n        let response; \r\n\r\n        //Si el refresh token existe, haz una llamada a refresh token, de lo contrario solicita un token\r\n        if(spotifyRefreshToken){\r\n            //Llamada\r\n            response = await spotifyAuthCall({refresh_token: spotifyRefreshToken, grant_type: 'refresh_token'});\r\n        }\r\n        else{\r\n            response = await spotifyAuthCall({grant_type: 'client_credentials'});\r\n        }\r\n\r\n        if(response.access_token){\r\n            setSpotifyRefreshToken(response?.refresh_token);\r\n            setSpotifyTokenResponse(response);\r\n            setIsAuthenticated(true);\r\n        }\r\n        else{\r\n            throw new Error(\"Credenciales incorrectas en spotify app\");\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            {\r\n                cargando\r\n                ?\r\n                <div className=\"d-flex justify-content-center center mt-5\">\r\n                    <div className=\"spinner-border\" style={{width: '5rem', height: '5rem'}} role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Fragment>\r\n                    <p className=\"subtitulo\">Haz click aqui para iniciar sesión:</p>\r\n                    <Link to=\"/login\">\r\n                        <Button onClick={handleLogin} variant=\"contained\" size=\"large\" startIcon={<Lock/>}>Iniciar sesión</Button>\r\n                    </Link>\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default NoSesion;","export default __webpack_public_path__ + \"static/media/escucha.3ba7ce00.svg\";","import React, {useContext, Fragment} from 'react';\r\nimport logo from '../../img/escucha.svg';\r\nimport {Link} from 'react-router-dom';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\n\r\nconst NavBarP = () => {\r\n    //State de la imagen que viene desde el context\r\n    const { isAuthenticated, setIsAuthenticated, guardarRegresar, guardarCargar, guardarFoto, guardarNombre, guardarErrorfoto, guardarEmocion, guardarReco } = useContext(ImagenContext);\r\n\r\n    const cerrarSesion = ()=>{\r\n        setIsAuthenticated(false);\r\n        guardarFoto({});\r\n        guardarRegresar(false);\r\n        guardarNombre('');\r\n        guardarErrorfoto(false);\r\n        guardarEmocion('');\r\n        guardarReco('');\r\n        guardarCargar(false);\r\n    }\r\n    return ( \r\n        <Fragment>\r\n            {\r\n                isAuthenticated \r\n                ?\r\n                <nav className=\"navbar navbar-dark bg-dark\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"navbar-brand\">\r\n                        <img src={logo} alt=\"\" width=\"30\" height=\"24\" className=\"d-inline-block align-text-top\"/>\r\n                        ShiftEmotion\r\n                        </a>\r\n                        <form className=\"d-flex\" onSubmit={cerrarSesion}>\r\n                            <Link to=\"/\">\r\n                            <button className=\"btn btn-secundario\" type=\"submit\" onClick={cerrarSesion}>Salir</button>\r\n                            </Link>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n                :\r\n                null\r\n            }\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default NavBarP;","import React, {Fragment} from 'react';\r\nimport NoSesion from './NoSesion';\r\nimport NavBarP from './NavBarP';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <Fragment>\r\n            <NavBarP/>\r\n            <header className=\"fluid\">\r\n            <div className=\"container-sm contenedor\">\r\n                <h1 className=\"titulo\">ShiftEmotion </h1>\r\n                <NoSesion/>\r\n            </div>\r\n        </header>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Header;","export default __webpack_public_path__ + \"static/media/camara.0448c34e.svg\";","export default __webpack_public_path__ + \"static/media/analisis.b937fbdf.svg\";","export default __webpack_public_path__ + \"static/media/escucha2.904842cb.svg\";","export default __webpack_public_path__ + \"static/media/escucha3.6eb37289.svg\";","import React from 'react';\r\nimport Camara from '../../img/camara.svg';\r\nimport Analisis from '../../img/analisis.svg';\r\nimport Escucha from '../../img/escucha2.svg';\r\nimport Historial from '../../img/escucha3.svg';\r\nconst Pasos = () => {\r\n\r\n    return ( \r\n        <div className=\"container mb-4\">\r\n            <div className=\"row titulo-contenedor\">\r\n            <h1 className=\"titulo-seccion\">Pasos a seguir:</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 col-md-3 pasos\">\r\n                    <p className=\"paso\">Elige una imagen tuya o tómate una selfie</p>\r\n                    <img src={Camara} width=\"100%\" alt=\"Camara\" className=\"imagen-pasos\"/>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-3 pasos\">\r\n                    <p className=\"paso\">Presiona “Enviar” para analizar la foto seleccionada</p>\r\n                    <img src={Analisis} width=\"100%\" alt=\"Camara\" className=\"imagen-pasos\"/>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-3 pasos\">\r\n                    <p className=\"paso\">Escucha las recomendaciones que tenemos para ti</p>\r\n                    <img src={Escucha} width=\"100%\" alt=\"Camara\" className=\"imagen-pasos\"/>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-3 pasos\">\r\n                    <p className=\"paso\">Visualiza y escucha tu historial de canciones</p>\r\n                    <img src={Historial} width=\"100%\" alt=\"Camara\" className=\"imagen-pasos\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Pasos;","export default __webpack_public_path__ + \"static/media/emosion.07ca6fd3.jpg\";","export default __webpack_public_path__ + \"static/media/musica.a8a21c84.jpg\";","export default __webpack_public_path__ + \"static/media/guitarra.bb19f787.jpeg\";","import React from 'react';\r\nimport avion from '../../img/emosion.jpg';\r\nimport lago from '../../img/musica.jpg';\r\nimport playa from '../../img/guitarra.jpeg';\r\n\r\nconst Informacion = () => {\r\n    return (  \r\n        <div className=\"container mb-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 col-md-4\">\r\n                    <div className=\"card mb-3\">\r\n                        <img src={playa} className=\"card-img-top\" alt=\"...\" height=\"230px\"/>\r\n                        <div className=\"card-body\">\r\n                            <h1 className=\"class-Title\">¿No sabes qué escuchar?</h1>\r\n                            <p className=\"card-text\">Muestranos una foto tuya y nosotros pondremos la música por ti.</p>\r\n                            <p className=\"card-text\">Gracias a la inteligencia artificial (IA), puedes obtener recomendaciones en base a sus gustos y preferencias.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-4\">\r\n                    <div className=\"card mb-3\">\r\n                        <img src={avion} className=\"card-img-top\" alt=\"...\" height=\"230px\"/>\r\n                        <div className=\"card-body\">\r\n                            <h1 className=\"class-Title\">Música para el mood de hoy</h1>\r\n                            <p className=\"card-text\">Te mostramos la música perfecta para tu estado de ánimo.</p> \r\n                            <p className=\"card-text\">Nuestro sistema de recomendaciones de música toma en cuenta factores externos e internos de los usuarios.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-4\">\r\n                    <div className=\"card mb-3\">\r\n                        <img src={lago} className=\"card-img-top\" alt=\"...\" height=\"230px\"/>\r\n                        <div className=\"card-body\">\r\n                            <h1 className=\"class-Title\">Chequea tu historial en base a tus emociones</h1>\r\n                            <p className=\"card-text\">Escucha las canciones guardadas en tu historial de recomendaciones.</p>\r\n                            <p className=\"card-text\">Las recomendaciones se realizan en base a emociones expresadas por los usuarios.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    );\r\n}\r\n \r\nexport default Informacion;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <footer>\r\n        <div className=\"contenedor footer-content text-center\">\r\n            <div id=\"contact-us\">\r\n                <h1>ShiftEmotion</h1>\r\n                <p>Todos los derechos reservados &copy;</p>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n     );\r\n}\r\n \r\nexport default Footer;","import React, {Fragment} from 'react';\r\nimport Header from './Header';\r\nimport Pasos from './Pasos';\r\nimport Informacion from './Informacion';\r\nimport Footer from './Footer';\r\n\r\nconst Principal = () => {\r\n    \r\n    return ( \r\n        <Fragment>\r\n            <Header/>\r\n            <Pasos/>\r\n            <Informacion/>\r\n            <Footer/>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Principal;","import React, { Fragment, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Camera from '@material-ui/icons/CameraAlt';\r\nimport Replay from '@material-ui/icons/Replay';\r\nimport On from '@material-ui/icons/Camera';\r\nimport Back from '@material-ui/icons/ArrowBack';\r\nimport Download from '@material-ui/icons/CloudDownload';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Foto = () => {\r\n\r\n    //State de la foto\r\n    const [foto, guardarFoto] = useState(false);\r\n    //State de error\r\n    const [error, guardarError] = useState(false);\r\n    //State camara encendida\r\n    const [encendida, guardarEncendida] = useState(false);\r\n    \r\n    const encenderCamara = () => {\r\n        guardarEncendida(true);\r\n        var video = document.querySelector('#v'), canvas = document.querySelector('#c');\r\n        \r\n        navigator.getUserMedia = (navigator.getUserMedia ||\r\n                        navigator.webkitGetUserMedia ||\r\n                        navigator.mozGetUserMedia ||\r\n                        navigator.msGetUserMedia);\r\n        \r\n        if(navigator.getUserMedia){\r\n            navigator.getUserMedia({video:true},function(stream){\r\n                video.srcObject=stream;\r\n                video.play();\r\n            }, function(e){console.log(e);});\r\n            video.addEventListener('loadedmetadata',function(){canvas.width = video.videoWidth; canvas.height = video.videoHeight;}, false);\r\n        }\r\n        else {\r\n            guardarEncendida(false);\r\n            alert('Tienes un navegador obsoleto');\r\n        }\r\n    }\r\n    \r\n    const tomarFoto = () =>{\r\n        var img = document.getElementById('img');\r\n        var canvas = document.getElementById('c');\r\n        var video = document.getElementById('v');\r\n        canvas.getContext('2d').drawImage(video,0,0);\r\n        var imgData = canvas.toDataURL('image/png');\r\n        img.setAttribute('src',imgData);\r\n        guardarFoto(true);\r\n    }\r\n\r\n    const repetirFoto = () =>{\r\n        guardarFoto(false);\r\n        var img = document.getElementById('img');\r\n        img.setAttribute('src',\"\");\r\n    }\r\n\r\n    const descargarFoto = () =>{\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        var video = document.getElementById('v');\r\n        var canvas = document.getElementById('c');\r\n        var imgData = canvas.toDataURL('image/png');\r\n        a.href = imgData;\r\n        a.download = 'image.png'\r\n        a.click();\r\n        document.body.removeChild(a);\r\n        video.pause();\r\n        video.src = \"\";\r\n        video.srcObject.getTracks()[0].stop();\r\n    }\r\n\r\n    const apagarCamara = ()=>{\r\n        var video = document.getElementById('v');\r\n        video.pause();\r\n        video.src = \"\";\r\n        if(video.srcObject !== null)\r\n        {\r\n            video.srcObject.getTracks()[0].stop();\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n            <h1 className=\"text-center\">Toma una foto con tu cámara web</h1>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <video id='v' autoPlay></video>\r\n                    <canvas id='c'></canvas>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <img src=\"\" alt=\"\" id='img'/>\r\n                </div>\r\n            </div>\r\n            {\r\n                foto\r\n                ?\r\n                <div className=\"center\">\r\n                    <Button variant=\"contained\" size=\"large\" startIcon={<Replay/>} onClick={repetirFoto}>Repetir foto</Button>\r\n                    <Link to=\"/subir-descarga\">\r\n                        <Button variant=\"contained\" size=\"large\" startIcon={<Download/>} onClick={descargarFoto}>Descargar foto</Button>\r\n                    </Link>\r\n                </div>\r\n                :\r\n                <Fragment>\r\n                {!encendida\r\n                ?\r\n                    <div className=\"center mt-3\">\r\n                        <Link to=\"/home\">\r\n                        <Button variant=\"contained\" size=\"large\" startIcon={<Back/>}>Regresar</Button>\r\n                        </Link>\r\n                        <Button variant=\"contained\" size=\"large\" startIcon={<On/>} onClick={encenderCamara}>Encender camara</Button>\r\n                    </div>\r\n                :\r\n                    <div className=\"center mt-3\">\r\n                        <Link to=\"/home\">\r\n                        <Button variant=\"contained\" size=\"large\" startIcon={<Back/>} onClick={apagarCamara}>Regresar</Button>\r\n                        </Link>\r\n                        <Button variant=\"contained\" size=\"large\" startIcon={<Camera/>} onClick={tomarFoto}>Tomar foto</Button>\r\n                    </div>\r\n                }\r\n                </Fragment>\r\n            }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Foto;","import { Fragment, useState, useContext } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Send from '@material-ui/icons/Send';\r\nimport Back from '@material-ui/icons/ArrowBack';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport {Link} from 'react-router-dom';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\n\r\nconst SubirDescarga= () =>{\r\n\r\n    //State de la imagen que viene desde el context\r\n    const { guardarFoto, guardarNombre, guardarCargar } = useContext(ImagenContext);\r\n\r\n    //State para la imagen subida\r\n    const [imagen, guardarImagen] = useState({});\r\n    //State para ver si existe una imagen\r\n    const [subida, guardarSubida] = useState(false);\r\n\r\n  const [ImageSelectedPrevious, setImageSelectedPrevious] = useState(null);\r\n  const changeImage = (e) => {\r\n    guardarImagen(e.target.files[0]);\r\n    guardarNombre(e.target.files[0].name);\r\n    guardarSubida(true);\r\n    if (e.target.files[0] !== undefined) {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onload = (e) => {\r\n        e.preventDefault();\r\n        setImageSelectedPrevious(e.target.result); // le damos el binario de la imagen para mostrarla en pantalla\r\n      };\r\n    }\r\n  };\r\n\r\n  const enviarFoto = () =>{\r\n    guardarFoto(imagen);\r\n    guardarCargar(true);\r\n  }\r\n\r\n  const cancelar = () =>{\r\n    guardarImagen(null);\r\n    guardarSubida(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <br />\r\n        {\r\n            !subida\r\n            ?\r\n            <Fragment>\r\n                <div className=\"image-upload-wrap\">\r\n                    <input\r\n                        className=\"file-upload-input\"\r\n                        type=\"file\"\r\n                        accept=\"image/\"\r\n                        multiple\r\n                        onChange={(e) => {\r\n                        changeImage(e);\r\n                        }}\r\n                    />\r\n                    <div className=\"text-information\">\r\n                        <h3>Arrastra o da click para seleccionar la imagen descargada</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"center mt-3\">\r\n                    <Link to=\"/tomar-foto\">\r\n                    <Button variant=\"contained\" size=\"large\" startIcon={<Back/>}>Regresar</Button>\r\n                    </Link>\r\n                </div>\r\n            </Fragment>\r\n            :\r\n            <Fragment>\r\n                <div className=\"center\">\r\n                    <img\r\n                    src={ImageSelectedPrevious}\r\n                    alt=\"\"\r\n                    height=\"480px\"\r\n                    width=\"640px\"\r\n                    />\r\n                </div>\r\n                <div className=\"container mt-3 center\">\r\n                  <Link to=\"/resultado\">\r\n                    <Button variant=\"contained\" component=\"span\" onClick = {enviarFoto} endIcon={<Send/>}>\r\n                            Enviar foto\r\n                    </Button>\r\n                    </Link>\r\n                    <Button variant=\"contained\" component=\"span\" onClick = {cancelar} endIcon={<Cancel/>}>\r\n                            Cancelar\r\n                    </Button>\r\n                </div>\r\n            </Fragment>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubirDescarga;\r\n","import React, {Fragment, useState, useContext, useEffect} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Like from '@material-ui/icons/ThumbUp';\r\nimport Medium from '@material-ui/icons/ThumbsUpDown';\r\nimport Dislike from '@material-ui/icons/ThumbDown';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Retro = () => {\r\n\r\n    //State de la imagen que viene desde el context\r\n    const { user, errorFoto } = useContext(ImagenContext);\r\n\r\n    //State para mensaje\r\n    const [mensaje, guardarMensaje] = useState(false);\r\n    //State para base de datos\r\n    const [base, guardarBase] = useState(false);\r\n\r\n    const like = ()=>{\r\n        //Lo que se almacenará en la base de datos\r\n        guardarBase({\r\n            id: uuidv4(),\r\n            email: user.correo,\r\n            nombre: user.nombre,\r\n            retro: 'Like'\r\n        });\r\n        guardarMensaje(true);\r\n    }\r\n    const medium = ()=>{\r\n        guardarBase({\r\n            id: uuidv4(),\r\n            email: user.correo,\r\n            nombre: user.nombre,\r\n            retro: 'Medium'\r\n        });\r\n        guardarMensaje(true);\r\n    }\r\n    const dislike = ()=>{\r\n        //Lo que se almacenará en la base de datos\r\n        guardarBase({\r\n            id: uuidv4(),\r\n            email: user.correo,\r\n            nombre: user.nombre,\r\n            retro: 'Dislike'\r\n        });\r\n        guardarMensaje(true);\r\n    }\r\n\r\n    //Meter el resultado a la base de datos\r\n    useEffect(() => {\r\n        const enviarDatos = async () =>{\r\n            const url ='https://15hahfb4hc.execute-api.us-east-2.amazonaws.com/dev/retro';\r\n            axios.post(url, base, {\r\n                headers: {\r\n                  'x-api-key': process.env.REACT_APP_API_KEY\r\n                }\r\n              });\r\n        }\r\n        if(mensaje){\r\n            enviarDatos();\r\n        }\r\n    }, [mensaje]);\r\n\r\n    return ( \r\n        <Fragment>\r\n            {\r\n                (!errorFoto)\r\n                ?\r\n                <Fragment>\r\n                    <div className=\"center mt-5\" >\r\n                        <h1 className=\"text-center\">¿Qué tal te pareció nuestro servicio?</h1>\r\n                    </div>\r\n                    {\r\n                        mensaje\r\n                        ?\r\n                        <div className=\"center mt-4\">\r\n                            <h2 className=\"text-center\">¡Gracias por tu retroalimentación!</h2>\r\n                        </div>\r\n                        :\r\n                        <div className=\"container center mt-4 mb-5\">\r\n                            <Stack direction=\"row\" spacing={2}>\r\n                                <Button variant=\"contained\" size=\"large\" startIcon={<Like />} onClick={like}>\r\n                                    Like\r\n                                </Button>\r\n                                <Button variant=\"outlined\" size=\"large\" startIcon={<Medium />} onClick={medium}>\r\n                                    Medium\r\n                                </Button>\r\n                                <Button variant=\"contained\" size=\"large\" startIcon={<Dislike />} onClick={dislike}>\r\n                                    Dislike\r\n                                </Button>\r\n                            </Stack>\r\n                        </div>\r\n                    }\r\n                </Fragment>\r\n                :\r\n                null\r\n            }\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Retro;","import React, {useContext} from 'react';\r\nimport logo from '../../img/escucha.svg';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Return from '@material-ui/icons/ArrowBack';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\nconst NavBar = () => {\r\n    //State de la imagen que viene desde el context\r\n    const { setIsAuthenticated, guardarRegresar, guardarBase, guardarFoto, guardarNombre, guardarErrorfoto, guardarEmocion, guardarCargar, guardarReco } = useContext(ImagenContext);\r\n\r\n    const cerrarSesion = ()=>{\r\n        setIsAuthenticated(false);\r\n        guardarFoto({});\r\n        guardarRegresar(false);\r\n        guardarNombre('');\r\n        guardarErrorfoto(false);\r\n        guardarEmocion('');\r\n        guardarReco('');\r\n        guardarCargar(false);\r\n    }\r\n\r\n    const regresar = ()=>{\r\n        guardarRegresar(true);\r\n        guardarCargar(false);\r\n        guardarErrorfoto(false);\r\n        guardarFoto({});\r\n        guardarBase({});\r\n        guardarNombre('');\r\n        guardarEmocion('');\r\n        guardarReco('');\r\n    }\r\n\r\n    return ( \r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <Link to=\"/home\">\r\n                    <Button variant=\"contained\" size=\"small\" startIcon={<Return/>} onClick={regresar}></Button>\r\n                </Link>\r\n                <a className=\"navbar-brand center\">\r\n                <img src={logo} alt=\"\" width=\"30\" height=\"24\" className=\"d-inline-block align-text-top\"/>\r\n                ShiftEmotion\r\n                </a>\r\n                <form className=\"d-flex\" onSubmit={cerrarSesion}>\r\n                    <Link to=\"/\">\r\n                    <button className=\"btn btn-secundario\" type=\"submit\" onClick={cerrarSesion}>Salir</button>\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default NavBar;","import React, {useContext} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Replay from '@material-ui/icons/ArrowBack';\r\nimport {Link} from 'react-router-dom';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\n\r\nconst ErrorResult = ({mensaje}) => {\r\n    //State de la imagen que viene desde el context\r\n    const { guardarRegresar, guardarCargar, guardarFoto, guardarBase, guardarErrorfoto, guardarNombre, guardarEmocion } = useContext(ImagenContext);\r\n\r\n    const regresar = ()=>{\r\n        guardarRegresar(true);\r\n        guardarCargar(false);\r\n        guardarFoto({});\r\n        guardarBase({});\r\n        guardarErrorfoto(false);\r\n        guardarNombre('');\r\n        guardarEmocion('');\r\n    }\r\n\r\n    return ( \r\n        <div className=\"container center\">\r\n            <div className=\"card bg-light mt-5\">\r\n                <div className=\"card-body\">\r\n                    <h1>{mensaje}</h1>\r\n                    <p>Lo sentimos, intenta con otra imagen.</p>\r\n                    <Link to=\"/home\">\r\n                    <Button variant=\"contained\" size=\"large\" startIcon={<Replay/>} onClick={regresar}>Regresar</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ErrorResult;","import React, { useState, useContext} from 'react';\r\nimport \"./style.css\";\r\n\r\nexport default React.memo(function ListItem({ imageUrl, id, externalUrl, releaseDate, name, artist}) {\r\n    \r\n    const [song, setSong] = useState({\r\n        id: '',\r\n        name: '',\r\n        artist: '',\r\n        releaseDate: '',\r\n        externalUrl: '',\r\n        imageUrl: ''\r\n    });\r\n\r\n    let canciones = [];\r\n\r\n    const handleOnClick = () =>{\r\n        window.open(externalUrl, \"_blank\");\r\n    };\r\n    return(\r\n        <div className=\"list-item\" onClick={handleOnClick}>\r\n            <img src={imageUrl} alt={id}/>\r\n            <p className=\"list-item-title\">{name}</p>\r\n            <p className=\"list-item-artist\">{artist}</p>\r\n            <p className=\"list-item-date\">{releaseDate}</p>\r\n        </div>\r\n    );\r\n});\r\n\r\n","import ListItem from \"./ListItem\";\r\nimport {memo} from 'react';\r\n\r\nexport default memo(function Track({ id, name, externalUrl, artist, releaseDate, imageUrl}){\r\n\r\n    return (\r\n       <ListItem\r\n        imageUrl= {imageUrl}\r\n        id={id}\r\n        externalUrl={externalUrl}\r\n        releaseDate={releaseDate}\r\n        name={name}\r\n        artist={artist}\r\n       />\r\n    )\r\n});","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\nimport { spotifySearchCall, getQuerySpotify } from '../../utils';\r\nimport Track from '../ListItems/Track';\r\nimport axios from 'axios';\r\nimport ErrorResult from '../resultado/ErrorResult';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Canciones = ({mensaje}) => {\r\n\r\n    const { base, user, historial, emocion, reco, spotifyTokenResponse, guardarBase } = useContext(ImagenContext);\r\n    //State de resultado\r\n    const [resultado, guardarResultado] = useState([]);\r\n    //State de consulta\r\n    const [consultaApi, guardarConsultaApi] = useState(false);\r\n    //State de error\r\n    const [error, guardarError] = useState(false);\r\n    const [errorCargar, guardarErrorCargar] = useState(false);\r\n\r\n    // //Obtener emocion\r\n    useEffect(() => {\r\n        if(reco){\r\n            handleSearch();\r\n        }\r\n        else{\r\n            guardarErrorCargar(true);\r\n        }\r\n\r\n    }, []);\r\n    \r\n\r\n    //Meter el resultado a la base de datos\r\n    useEffect(() => {\r\n        const enviarDatos = async () =>{\r\n            const url = process.env.REACT_APP_API_BACKEND_URL + '/historial';\r\n            const response = await axios.post(url, base, {\r\n                headers: {\r\n                  'x-api-key': process.env.REACT_APP_API_KEY\r\n                }\r\n              });\r\n            const itemEmotion = {\r\n                id: uuidv4(),\r\n                emocion: emocion\r\n            };\r\n            const url2 = process.env.REACT_APP_API_BACKEND_URL + '/emociones';\r\n            const response2 = await axios.post(url2, itemEmotion, {\r\n                headers: {\r\n                  'x-api-key': process.env.REACT_APP_API_KEY\r\n                }\r\n              });\r\n        }\r\n        if(consultaApi){\r\n            enviarDatos();\r\n        }\r\n    }, [consultaApi]);\r\n\r\n    const handleRecarga = ()=>{\r\n        if(reco){\r\n            handleSearch();\r\n        }\r\n        else{\r\n            guardarError(true);\r\n        }\r\n    }\r\n\r\n    const handleSearch = async() =>{\r\n        const paramsArray = [\r\n            {\r\n                q: reco\r\n            },\r\n            {\r\n                type: 'track'\r\n            },\r\n            {\r\n                limit: 10\r\n            },\r\n            {\r\n                offset: 10\r\n            }\r\n        ];\r\n        const response = await spotifySearchCall(paramsArray, spotifyTokenResponse.access_token);\r\n        if(response){\r\n            guardarErrorCargar(false);\r\n            let canciones = [];\r\n            response.tracks.items.map((item, index) => {\r\n                let song = {\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    artist: item.artists[0].name,\r\n                    releaseDate: item.album?.release_date,\r\n                    imageUrl: item.album?.images[0]?.url,\r\n                    externalUrl: item.external_urls?.spotify\r\n                };\r\n                canciones.push(song);\r\n            });\r\n            guardarResultado(canciones);\r\n\r\n            // //Si el usuario ya tiene historial guardado\r\n            if(historial){\r\n                let nuevo = [];\r\n                historial.map((item) =>{\r\n                    if(!canciones.find(x => x.id === item.id)){\r\n                        nuevo.push(item);\r\n                    }\r\n                });\r\n                let nuevoHistorial = canciones.concat(nuevo);\r\n                //Lo que se almacenará en la base de datos\r\n                guardarBase({\r\n                    email: user.correo,\r\n                    nombre: user.nombre,\r\n                    body: nuevoHistorial\r\n                });\r\n            }\r\n            else{\r\n                //Lo que se almacenará en la base de datos\r\n                guardarBase({\r\n                    email: user.correo,\r\n                    nombre: user.nombre,\r\n                    body: canciones\r\n                });\r\n            }\r\n            guardarConsultaApi(true);\r\n        }\r\n        else{\r\n            guardarError(true);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"container-sm contenedor\">\r\n                <div className=\"row titulo-contenedor\">\r\n                    <h1 className=\"titulo-seccion\">{mensaje}</h1>\r\n                </div>\r\n                {\r\n                    emocion\r\n                    ?\r\n                    <div className='row'>\r\n                        <p className='class-Title'>Resultado emocion: {emocion}</p>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n            {\r\n                !error\r\n                ?\r\n                <Fragment>\r\n                    {\r\n                        errorCargar \r\n                        ?\r\n                        <div className='contenedor center'>\r\n                            <div className='row'>\r\n                                <p className='class-Title'>Error al cargar las canciones</p>\r\n                            </div>\r\n                            <div className='row'>\r\n                            <Button onClick={handleRecarga} variant=\"contained\" size=\"large\">Volver a intentar</Button>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className='tracks-container'>\r\n                            <p className='home-tracks-title'>Canciones</p>\r\n                            <div className='tracks-container-item'>\r\n                                {resultado.map((item, index) => <Track key={index} {...item}/>)}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </Fragment>\r\n                :\r\n                <ErrorResult mensaje='No se pudo realizar la consulta'/>\r\n            }\r\n        </Fragment>\r\n        );\r\n}\r\n \r\nexport default Canciones;","import React, {useState, Fragment, useContext } from 'react';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\nimport Retro from './Retro';\r\nimport Footer from '../principal/Footer';\r\nimport NavBar from './NavBar';\r\nimport ErrorResult from './ErrorResult';\r\nimport Canciones from '../principal/Canciones';\r\n\r\nconst Resultado = () => {\r\n\r\n    //State de la imagen que viene desde el context\r\n    const { errorfoto } = useContext(ImagenContext);\r\n    //State de loading\r\n    const [loading, guardarLoading] = useState(true);\r\n\r\n    //Tiempo de carga\r\n    setTimeout(()=>{\r\n        guardarLoading(false);\r\n    }, 2000);\r\n\r\n    if(loading){\r\n        return(\r\n            <div className=\"d-flex justify-content-center center mt-5\">\r\n                <div className=\"spinner-border\" style={{width: '5rem', height: '5rem'}} role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return ( \r\n            <Fragment>\r\n                <NavBar/>\r\n                {\r\n                    (!errorfoto)\r\n                    ?\r\n                    <Fragment> \r\n                        <Canciones\r\n                        mensaje = 'Resultado de canciones:'\r\n                        />\r\n                            <Retro/>\r\n                            {/* <Form/> */}\r\n                        <Footer/>\r\n                    </Fragment>\r\n                    :\r\n                    <ErrorResult mensaje='La imagen no fue reconocida'/>\r\n                }\r\n            </Fragment>\r\n            );\r\n    }\r\n}\r\n \r\nexport default Resultado;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nconst Error = ({mensaje}) =>( \r\n    <p className=\"alert alert-danger\">{mensaje}</p>\r\n );\r\n\r\n Error.propTypes = {\r\n     mensaje: PropTypes.string.isRequired\r\n }\r\nexport default Error;","import React, {useState, useEffect, Fragment, useContext} from 'react';\r\nimport logo from '../../img/escucha.svg';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Error from '../Error.js';\r\nimport axios from 'axios';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\n\r\nconst Login = () => {\r\n\r\n    //State de la auth que viene desde el context\r\n    const { isAdmin, guardarUser, setIsAuthenticated, guardarIsAdmin} = useContext(ImagenContext);\r\n\r\n\r\n    //State del login\r\n    const [usuario, guardarUsuario] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    //State mensaje error\r\n    const [mensaje, guardarMensaje] = useState(\"\");\r\n    //State para error\r\n    const [error, guardarError] = useState(false);\r\n    //State consulta\r\n    const [consultar, guardarConsulta] = useState(false);\r\n    //State satisfactorio\r\n    const [exito, guardarExito] = useState(false);\r\n\r\n    const {email, password} = usuario;\r\n\r\n    const onChange = e =>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit= e =>{\r\n        e.preventDefault();\r\n        //Validar campos vacios\r\n        if(email.trim() === '' || password.trim() === '')\r\n        {\r\n            guardarMensaje(\"Todos los campos son obligatorios\");\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n        guardarConsulta(true);\r\n    }\r\n\r\n    //Funcion llenar objeto\r\n    const llenarObjeto = (datos) =>{\r\n        guardarUser({\r\n            correo: datos.email,\r\n            nombre: datos.nombre\r\n        });\r\n    }\r\n    //Llamado a la API\r\n    useEffect(() => {\r\n        const consultarAPI = async () =>{\r\n            const url = process.env.REACT_APP_API_BACKEND_URL + `/users?email=${usuario.email}`;\r\n            let res = await axios.get(url,{\r\n                headers: {\r\n                  'x-api-key': process.env.REACT_APP_API_KEY\r\n                }\r\n              });\r\n            let data = res.data;\r\n            if(data)\r\n            {\r\n                //Convertir json a objeto\r\n                let datos = data;\r\n                llenarObjeto(datos);\r\n                let pass = String(datos.password);\r\n                // Decrypt\r\n                var CryptoJS = require(\"crypto-js\");\r\n                var bytes  = CryptoJS.AES.decrypt(pass, 'secret key 123');\r\n                var originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n                if(usuario.password === originalText)\r\n                {\r\n                    if(usuario.email === 'admin@gmail.com'){\r\n                        guardarIsAdmin(true);\r\n                    }\r\n                    guardarExito(true);\r\n                    setIsAuthenticated(true);\r\n                }\r\n                else{\r\n                    guardarMensaje(\"Contraseña incorrecta\");\r\n                    guardarError(true);\r\n                    guardarConsulta(false);\r\n                }\r\n            }\r\n            else{\r\n                guardarMensaje(\"Usuario no encontrado\");\r\n                guardarError(true);\r\n                guardarConsulta(false);\r\n            }\r\n        }\r\n        if(consultar){\r\n            consultarAPI();\r\n        }\r\n    }, [consultar])\r\n    return ( \r\n        <Fragment>\r\n        {\r\n            !exito\r\n            ?\r\n            <div className=\"center mt-5\">\r\n                <div className=\"contenedor-form\">\r\n                    <h1 className=\"text-center\">ShiftEmotion</h1>\r\n                    <div className=\"center mb-4 mt-3\">\r\n                    <img src={logo} width=\"250px\" className=\"center\" alt=\"Icon\"/>\r\n                    </div>\r\n                    {error ? <Error mensaje={mensaje}/> : null}\r\n                    <form\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <div className=\"campo-form\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Ingresa tu email\"\r\n                                onChange={onChange}\r\n                                value={email}\r\n                            />\r\n                        </div>\r\n                        <div className=\"campo-form\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Ingresa tu password\"\r\n                                onChange={onChange}\r\n                                value={password}\r\n                            />\r\n                        </div>\r\n                        <div className=\"campo-form\">\r\n                            <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                                value=\"Iniciar Sesión\"/>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"center\">\r\n                        <div className=\"enlace-cuenta\">\r\n                        <Link to={'/'} className=\"enlaces-cuenta\">Regresar</Link>\r\n                        <Link to={'/nueva-cuenta'} className=\"enlaces-cuenta\">Crear cuenta</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <Fragment>\r\n                {\r\n                    isAdmin\r\n                    ?\r\n                    <Redirect push to=\"/dashboard\"/>\r\n                    :\r\n                    <Redirect push to=\"/home\"/>\r\n                }\r\n            </Fragment>\r\n        }\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Login;","import React, {useState, useEffect, Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Error from '../Error.js';\r\nimport axios from 'axios';\r\n\r\nconst NuevaCuenta = () => {\r\n\r\n    //State de crear cuenta\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        confirmar: ''\r\n    })\r\n\r\n    //State del usuario creado\r\n    const [creado, guardarCreado] = useState({\r\n        nombre: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    //State mensaje error\r\n    const [mensaje, guardarMensaje] = useState(\"\");\r\n\r\n    //State consulta\r\n    const [consultar, guardarConsulta] = useState(false);\r\n\r\n    //State para error\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //State satisfactorio\r\n    const [exito, guardarExito] = useState(false);\r\n\r\n    const onChange= e =>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const crearCuenta = e =>{\r\n        e.preventDefault();\r\n\r\n        guardarError(false);\r\n        //Validar campos vacios\r\n        if(nombre.trim() === '' || email.trim() === '' || password.trim() === '' || confirmar.trim() === '')\r\n        {\r\n            guardarMensaje(\"Todos los campos son obligatorios\");\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        //Validar contraseñas iguales\r\n        if(password !== confirmar)\r\n        {\r\n            guardarMensaje(\"Las contraseñas no coinciden\");\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        //Validar tamaño de contraseña\r\n        if(password.length < 5)\r\n        {\r\n            guardarMensaje(\"La contraseña es demasiado corta\");\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        var CryptoJS = require(\"crypto-js\");\r\n \r\n        // Encrypt\r\n        var ciphertext = CryptoJS.AES.encrypt(password, 'secret key 123').toString();\r\n        guardarCreado({\r\n            nombre: nombre,\r\n            email: email,\r\n            password: ciphertext\r\n        });\r\n        guardarConsulta(true);\r\n        \r\n    }\r\n\r\n    const {nombre, email, password, confirmar} = usuario;\r\n\r\n    //Llamado a la API\r\n    useEffect(() => {\r\n        const consultarAPI = async () =>{\r\n            const url = process.env.REACT_APP_API_BACKEND_URL + '/users';\r\n            axios.post(url, creado, {\r\n                headers: {\r\n                  'x-api-key': process.env.REACT_APP_API_KEY\r\n                }\r\n              })\r\n            .then(response =>{\r\n                if(response.status === 200)\r\n                {\r\n                    guardarExito(true);\r\n                }\r\n                else{\r\n                    guardarMensaje(\"Error al crear cuenta\");\r\n                    guardarError(true);\r\n                    guardarConsulta(false);\r\n                }\r\n            });\r\n        }\r\n        if(consultar){\r\n            consultarAPI();\r\n        }\r\n    }, [consultar])\r\n\r\n    return ( \r\n        <Fragment>\r\n            {\r\n                !exito \r\n                ?\r\n                <div className=\"center mt-5\">\r\n                    <div className=\"contenedor-form sombra-dark\">\r\n                        <h1 className='text-center mb-3'>Crear Cuenta</h1>\r\n                        {error ? <Error mensaje={mensaje}/> : null}\r\n                        <form\r\n                            onSubmit={crearCuenta}\r\n                        >\r\n                            <div className=\"campo-form\">\r\n                                <label htmlFor=\"email\">Nombre</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"nombre\"\r\n                                    name=\"nombre\"\r\n                                    placeholder=\"Ingresa tu nombre\"\r\n                                    onChange={onChange}\r\n                                    value={nombre}\r\n                                />\r\n                            </div>\r\n                            <div className=\"campo-form\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Ingresa tu email\"\r\n                                    onChange={onChange}\r\n                                    value={email}\r\n                                />\r\n                            </div>\r\n                            <div className=\"campo-form\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Ingresa tu password\"\r\n                                    onChange={onChange}\r\n                                    value={password}\r\n                                />\r\n                            </div>\r\n                            <div className=\"campo-form\">\r\n                                <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"confirmar\"\r\n                                    name=\"confirmar\"\r\n                                    placeholder=\"Repite tu password\"\r\n                                    onChange={onChange}\r\n                                    value={confirmar}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"campo-form\">\r\n                                <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                                    value=\"Registrarme\"/>\r\n                            </div>\r\n                        </form>\r\n                        <Link to={'/login'} className=\"enlace-cuenta\"> Volver a iniciar sesión </Link>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className=\"center mt-5\">\r\n                    <div className=\"contenedor-form sombra-dark\">\r\n                        <h1>Cuenta Creada Exitosamente</h1>\r\n                        <p>Por favor inicia sesión</p>\r\n                        <Link to={'/login'} className=\"enlace-cuenta\"> Iniciar sesión </Link>\r\n                    </div>\r\n                </div>\r\n            }\r\n        \r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default NuevaCuenta;","import React, {useContext} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\n\r\nconst RutaPrivada = ({ component: Component, ...props }) => {\r\n    //State de la auth que viene desde el context\r\n    const { isAuthenticated } = useContext(ImagenContext);\r\n    return ( \r\n        <Route {...props } render={ props => !isAuthenticated \r\n        ? (\r\n            <Redirect to=\"/\"/>\r\n        )\r\n        :(\r\n            <Component {...props}/>\r\n        )}\r\n        />\r\n     );\r\n}\r\n \r\nexport default RutaPrivada;","import React, {useState, Fragment, useContext} from 'react';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Camera from '@material-ui/icons/CameraAlt';\r\nimport Select from '@material-ui/icons/ImageSearch';\r\nimport Send from '@material-ui/icons/Send';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Stack from '@mui/material/Stack';\r\nimport {Link} from 'react-router-dom';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst Subir = () => {\r\n\r\n    //State de la imagen que viene desde el context\r\n    const { guardarFoto, guardarNombre, guardarCargar } = useContext(ImagenContext);\r\n\r\n    //State del archivo subido\r\n    const [archivo, guardarArchivo] = useState({});\r\n\r\n    //State para mostrar la imagen y botón de subir\r\n    const [mostrarboton,guardarMostrarBoton] = useState(false);\r\n\r\n    //Funcion que se ejecuta al dar click en el botón para tomar foto\r\n    const tomarFoto = ()=>{\r\n        console.log(\"Tomar foto\");\r\n    }\r\n\r\n    //Funcion que se ejecuta al da click en cancelar\r\n    const cancelar = ()=>{\r\n        guardarArchivo(null);\r\n        guardarCargar(false);\r\n        guardarNombre('');\r\n        guardarMostrarBoton(false);\r\n    }\r\n\r\n    //Funcion que se ejecuta al seleccionar un archivo\r\n    const archivoSeleccionado = e =>{\r\n        guardarArchivo(e.target.files[0]);\r\n        guardarNombre(e.target.files[0].name);\r\n        guardarMostrarBoton(true);\r\n    }\r\n\r\n    //Funcion para enviar la foto\r\n    const enviarFoto = () =>{\r\n        guardarFoto(archivo);\r\n        guardarCargar(true);\r\n    }\r\n    return ( \r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            \r\n            {\r\n                !mostrarboton\r\n                ?\r\n                <Fragment>\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" onChange={archivoSeleccionado}/>\r\n                        <Button variant=\"contained\" component=\"span\" startIcon={<Select/>}>\r\n                        Seleccionar\r\n                        </Button>\r\n                    </label>\r\n                    <Link to=\"/tomar-foto\">\r\n                        <Button variant=\"contained\" component=\"span\" startIcon={<Camera/>} onClick = {tomarFoto} >\r\n                            Tomar foto\r\n                        </Button>\r\n                    </Link>\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <Link to=\"/resultado\">\r\n                    <Button variant=\"contained\" component=\"span\" onClick = {enviarFoto} endIcon={<Send/>}>\r\n                        Enviar foto\r\n                    </Button>\r\n                    </Link>\r\n                    <Button variant=\"contained\" component=\"span\" onClick = {cancelar} endIcon={<Cancel/>}>\r\n                        Cancelar\r\n                    </Button>\r\n                </Fragment>\r\n            }\r\n        </Stack>\r\n     );\r\n}\r\n \r\nexport default Subir;","import React, {useContext, Fragment} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport UploadIcon from '@material-ui/icons/Image';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Box from '@material-ui/core/Box';\r\nimport Subir from './Subir';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst Sesion = () => {\r\n    //State de la imagen que viene desde el context\r\n    const { user, nombre } = useContext(ImagenContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    return ( \r\n        <Fragment>\r\n            <p className=\"subtitulo\">Hola {user.nombre}! Haz click para seleccionar una imagen</p>\r\n            <Button variant=\"contained\" size=\"large\" startIcon={<UploadIcon/>} onClick={handleOpen}>Cargar imagen</Button>\r\n            <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <div className=\"row\">\r\n                    <h2>\r\n                    Cargar Imagen\r\n                    </h2>\r\n                        {\r\n                            !nombre\r\n                            ?\r\n                            <p>\r\n                            Selecciona una imagen o toma una foto\r\n                            </p>\r\n                            :\r\n                            <p>\r\n                                {nombre}\r\n                            </p>\r\n                        }\r\n                    <Subir/>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Sesion;","import React, {Fragment} from 'react';\r\nimport Sesion from './Sesion';\r\nimport NavBarP from './NavBarP';\r\n\r\nconst HeaderLogueado = () => {\r\n    return ( \r\n        <Fragment>\r\n            <NavBarP/>\r\n            <header className=\"fluid\">\r\n            <div className=\"container-sm contenedor\">\r\n                <h1 className=\"titulo\">ShiftEmotion </h1>\r\n                <Sesion/>\r\n            </div>\r\n        </header>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default HeaderLogueado;","import React, {Fragment, useContext, useEffect} from 'react';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\nimport Track from '../ListItems/Track';\r\nimport axios from 'axios';\r\n\r\nconst Historial = () => {\r\n\r\n    const { user, historial, isAuthenticated, guardarHistorial } = useContext(ImagenContext);\r\n    \r\n\r\n    //Traer las canciones de la base de datos\r\n    useEffect(() => {\r\n        const consultarDatos = async () =>{\r\n            const url = process.env.REACT_APP_API_BACKEND_URL + `/historial?email=${user.correo}`;\r\n            const response = await axios.get(url,{\r\n                headers: {\r\n                  'x-api-key': process.env.REACT_APP_API_KEY\r\n                }\r\n              });\r\n            guardarHistorial(response.data.body);\r\n        }\r\n        if(isAuthenticated){\r\n            consultarDatos();\r\n        }\r\n    }, []);\r\n\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"container-sm contenedor mt-3\">\r\n                <div className=\"row titulo-contenedor\">\r\n                    <h1 className=\"titulo-seccion\">Historial de canciones:</h1>\r\n                </div>\r\n            </div>\r\n            {\r\n                historial\r\n                ?\r\n                    <div className='historial-container mb-5'>\r\n                        <div className='historial-container-item row'>\r\n                            {historial.map((item, index) => <div className='col-md-4 col-lg-3 center' key={index}><Track {...item}/></div>)}\r\n                        </div>\r\n                    </div>\r\n                :\r\n                <h2 className='class-Title center mb-5'>No tienes un historial de canciones, sube una foto para buscar.</h2>\r\n            }\r\n            \r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Historial;","import React, {Fragment } from 'react';\r\nimport HeaderLogueado from './HeaderLogueado';\r\nimport Footer from './Footer';\r\nimport Historial from './Historial';\r\n\r\nconst Logueado = () => {\r\n\r\n    return ( \r\n        <Fragment>\r\n            <HeaderLogueado/>\r\n            <Historial/>\r\n            <Footer/>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Logueado;","import React, {useEffect, useContext, useState, Fragment} from 'react';\r\nimport {ImagenContext} from '../../context/ImagenContext';\r\nimport axios from 'axios';\r\nimport NavBar from './NavBarP';\r\nimport Footer from './Footer';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nconst Dashboard = () => {\r\n\r\n    const { isAdmin} = useContext(ImagenContext);\r\n\r\n    //State de usuarios\r\n    const [usuarios, guardarUsuarios] = useState(0);\r\n    //State max user\r\n    const [maxUser, guardarMaxUser] = useState('');\r\n    //State max reco\r\n    const [maxReco, guardarMaxReco] = useState('');\r\n    //State total reco\r\n    const [totalReco, guardarTotalReco] = useState(0);\r\n    //State de mostrar Dashboard\r\n    const [mostrar, guardarMostrar] = useState(false);\r\n    //State data\r\n    const [dataRetro, guardarDataRetro] = useState([]);\r\n    const [dataEmo, guardarDataEmo] = useState([]);\r\n    //State opciones\r\n    const [optionsRetro, guardarOptionsRetro] = useState([]);\r\n    const [optionsEmo, guardarOptionsEmo] = useState([]);\r\n\r\n    //Traer los datos del dashboard\r\n    useEffect(() => {\r\n        const consultarDatos = async () =>{\r\n            const url = process.env.REACT_APP_API_BACKEND_URL + `/dashboard`;\r\n            const response = await axios.get(url, {\r\n                headers: {\r\n                  'x-api-key': process.env.REACT_APP_API_KEY\r\n                }\r\n              });\r\n            mostrarRetro(response.data.retros);\r\n            mostrarEmociones(response.data.emotions);\r\n            guardarTotalReco(getTotalReco(response.data.recomendations));\r\n            let array = getMaxReco(response.data.recomendations).split('|');\r\n            guardarMaxUser(array[0]);\r\n            guardarMaxReco(array[1]);\r\n            guardarUsuarios(response.data.users);\r\n            if(dataRetro && dataEmo){\r\n                guardarMostrar(true);\r\n            }\r\n            else{\r\n                console.log('No hay data');\r\n            }\r\n            // guardarRetros(response.data.retros);\r\n        }\r\n        if(isAdmin){\r\n            consultarDatos();\r\n        }\r\n    }, []);\r\n\r\n    const getTotalReco = (recoArray) =>{\r\n        let item = recoArray.find(x => x.nombre === 'admin');\r\n        return item.recomendaciones;\r\n    }\r\n\r\n    const getMaxReco = (recoArray) =>{\r\n        var array = recoArray.filter(item => item.nombre !== 'admin');\r\n        var maxValue = Math.max(...array.map(item => item.recomendaciones));\r\n        var item = array.find(x => x.recomendaciones === maxValue);\r\n        return item.nombre + '|' + item.recomendaciones;\r\n    }\r\n\r\n    const mostrarEmociones = (emocionesArray) =>{\r\n        let labelsEmo = [];\r\n        let valoresEmo = [];\r\n        let totalE = emocionesArray.find(x => x.nombre === 'total');\r\n        let total = totalE.valor;\r\n        emocionesArray.forEach(element => {\r\n            if(element.nombre !== 'total')\r\n            {\r\n                labelsEmo.push(element.nombre);\r\n                valoresEmo.push(element.valor / total);\r\n            }\r\n        });\r\n        let data={\r\n            labels: labelsEmo,\r\n            datasets: [{\r\n                label: 'Resultados',\r\n                backgroundColor: ['green', 'lightblue', 'violet', 'gray', 'orange', 'blue', 'red', 'yellow'],\r\n                borderColor: 'black',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(0,255,0,0.2)',\r\n                hoverBorderColor: '#FF0000',\r\n                data: valoresEmo\r\n            }]\r\n        };\r\n        let opciones={\r\n            responsive: true\r\n        };\r\n        guardarDataEmo(data)\r\n        guardarOptionsEmo(opciones);\r\n    };\r\n\r\n    const mostrarRetro = (retroArray) =>{\r\n        let labelsRetro = [];\r\n        let valoresRetro = [];\r\n        retroArray.forEach(element => {\r\n            if(element.nombre !== 'total')\r\n            {\r\n                labelsRetro.push(element.nombre);\r\n                valoresRetro.push(element.valor);\r\n            }\r\n        });\r\n        let data={\r\n            labels: labelsRetro,\r\n            datasets: [{\r\n                label: 'Resultados',\r\n                backgroundColor: ['green', 'yellow', 'red'],\r\n                borderColor: 'black',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(0,255,0,0.2)',\r\n                hoverBorderColor: '#FF0000',\r\n                data: valoresRetro\r\n            }]\r\n        };\r\n        let opciones={\r\n            maintainAspectRatio: false,\r\n            responsive: true\r\n        };\r\n        guardarDataRetro(data)\r\n        guardarOptionsRetro(opciones);\r\n    };\r\n\r\n    if(mostrar){\r\n        return(\r\n            <Fragment>\r\n                <NavBar/>\r\n                <div className=\"container mb-5\">\r\n                    <div className=\"row titulo-contenedor\">\r\n                        <h1 className=\"titulo-seccion\">Dashboard:</h1>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-4\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h1 className=\"class-Title center\">Cantidad de usuarios</h1>\r\n                                    <p className=\"titulo-seccion center\">{usuarios}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6 col-md-4\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h1 className=\"class-Title center\">Total de recomendaciones guardadas</h1>\r\n                                    <p className=\"titulo-seccion center\">{totalReco}</p> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6 col-md-4\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h1 className=\"class-Title center\">Usuario con más recomendaciones</h1>\r\n                                    <p className=\"titulo-seccion center\">{maxUser}: {maxReco}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row center\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card center\" >\r\n                                <div className=\"card-body\">\r\n                                    <h1 className=\"class-Title center\">Retroalimentación de usuarios</h1>\r\n                                </div>\r\n                                <div style={{width: '400px', height: '400px'}}>\r\n                                    <Bar data={dataRetro} options={optionsRetro}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card center\">\r\n                                <div className=\"card-body\">\r\n                                    <h1 className=\"class-Title center\">Porcentajes de emociones</h1>\r\n                                </div>\r\n                                <div style={{width: '400px', height: '400px'}}>\r\n                                    <Pie data={dataEmo} options={optionsEmo}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer/>\r\n            </Fragment>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <Fragment>\r\n                <NavBar/>\r\n                <Footer/>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Dashboard;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Principal from './components/principal/Principal';\nimport Foto from './components/principal/Foto';\nimport SubirDescarga from './components/principal/SubirDescarga';\nimport Resultado from './components/resultado/Resultado';\nimport ImagenProvider from './context/ImagenContext';\nimport Login from './components/auth/Login.js';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport RutaPrivada from './components/rutas/RutaPrivada';\nimport Logueado from './components/principal/Logueado';\nimport Dashboard from './components/principal/Dashboard';\n\nfunction App() {\n  return (\n    <ImagenProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Principal}/>\n          <Route exact path=\"/login\" component={Login}/>\n          <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta}/>\n          <RutaPrivada exact path=\"/home\" component={Logueado}/>\n          <RutaPrivada exact path=\"/dashboard\" component={Dashboard}/>\n          <RutaPrivada exact path=\"/tomar-foto\" component={Foto}/>\n          <RutaPrivada exact path=\"/subir-descarga\" component={SubirDescarga}/>\n          <RutaPrivada exact path=\"/resultado\" component={Resultado}/>\n        </Switch>\n      </Router>\n    </ImagenProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import apiCall from \"../api\";\r\n\r\nconst commonParams = {\r\n    client_id: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n    client_secret: process.env.REACT_APP_SPOTIFY_CLIENT_SECRET\r\n};\r\n\r\nexport const spotifyAuthCall = async(requiredParams)=>{\r\n\r\n    try {\r\n        \r\n        const params = {\r\n            ...requiredParams,\r\n            ...commonParams,\r\n        };\r\n        const searchParams = Object.keys(params).map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])).join(\"&\");\r\n\r\n        const spotifyCall = await apiCall({\r\n            method: 'POST',\r\n            url: 'https://accounts.spotify.com/api/token',\r\n            body: searchParams,\r\n            headers: {\"Content-type\": \"application/x-www-form-urlencoded\",\r\n            'Authorization': 'Basic ' + (new Buffer(process.env.REACT_APP_SPOTIFY_CLIENT_ID + ':' + process.env.REACT_APP_SPOTIFY_CLIENT_SECRET).toString('base64'))}\r\n        });\r\n    \r\n        return await spotifyCall.json();\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const spotifySearchCall = async(paramsArray, token) =>{\r\n    try {\r\n        const url = new URL(\"https://api.spotify.com/v1/search\");\r\n        for (const item of paramsArray) {\r\n            const key = Object.keys(item)[0];\r\n            url.searchParams.append(key, item[key]);\r\n        }\r\n\r\n        const spotifyCall = await apiCall({\r\n            method: 'GET',\r\n            url,\r\n            headers:{\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return await spotifyCall.json();\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const recognitionCall = async(foto) => {\r\n    var myB64 = await blobtobase64(foto); //optencion del Base 64 del archivo\r\n\r\n    var bodyjson = JSON.stringify({ //Armado de JSON para el body\r\n        name: \"MMGB6.jpg\",\r\n        content: myB64\r\n    });\r\n\r\n    var URL = process.env.REACT_APP_API_RECOGNITION_URL + \"/APR_Lambda\"; //Endpoint\r\n    var params = {\r\n        method: 'POST',\r\n        body: bodyjson\r\n    };\r\n    return await fetch(URL, params).then(response => response.json());\r\n};\r\n\r\nconst blobtobase64 = (blob) => { // Funcion para obtencion del base 64\r\n    return new Promise((resolve,reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(blob);\r\n        reader.onloadend = () => {\r\n            return resolve(reader.result.split(',')[1])\r\n        }\r\n    })\r\n};\r\n\r\nexport const getQuerySpotify = (emotionsArray) => {\r\n    var maxValue = Math.max(...emotionsArray.map(item => item.Confidence));\r\n    var item = emotionsArray.find(x => x.Confidence === maxValue);\r\n    var emotion = item.Type;\r\n    let result;\r\n    switch (emotion) {\r\n        case \"CALM\":\r\n            result = 'para bailar';\r\n            break;\r\n\r\n        case \"SURPRISED\":\r\n            result = 'happy surprised';\r\n            break;\r\n\r\n        case \"FEAR\":\r\n            result = 'calm songs';\r\n            break;\r\n    \r\n        case \"SAD\":\r\n            result = 'buen animo';\r\n            break;\r\n\r\n        case \"CONFUSED\":\r\n            result = 'normal';\r\n            break;\r\n\r\n        case \"DISGUSTED\":\r\n            result = 'canciones agradables';\r\n            break;\r\n\r\n        case \"ANGRY\":\r\n            result = 'canciones tranquilas';\r\n            break;\r\n\r\n        case \"HAPPY\":\r\n            result = 'happy happy songs';\r\n        break;\r\n        default:\r\n            break;\r\n    }\r\n    return emotion + '|' + result;\r\n};","export default function apiCall({\r\n    url,\r\n    params,\r\n    method,\r\n    body,\r\n    headers\r\n}){\r\n    return fetch(url, {\r\n        params,\r\n        method,\r\n        body,\r\n        headers\r\n    })\r\n}"],"sourceRoot":""}